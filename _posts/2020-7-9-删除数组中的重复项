给定一个排序数组，你需要在 原地 删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。不要使用额外的数组空间，你必须在 原地 修改输入数组 并在使用 O(1) 额外空间的条件下完成。

示例 1:

给定数组 nums = [1,1,2], 函数应该返回新的长度 2, 并且原数组 nums 的前两个元素被修改为 1, 2。 你不需要考虑数组中超出新长度后面的元素。

示例 2:给定 nums = [0,0,1,1,1,2,2,3,3,4],函数应该返回新的长度 5, 并且原数组 nums 的前五个元素被修改为 0, 1, 2, 3, 4。你不需要考虑数组中超出新长度后面的元素。

解题思路一：

1.题目中给出条件为有序数组

2.使用for循环，如果前后两个元素，相等，则使用splice()删除，依次循环到结束

具体代码如下

![_config.yml]({{ site.baseurl }}/images/2020-7-9-01.jpg)

解题思路二：

1.题目中给出条件为有序数组

2.双指针方法，p指向当前元素，q指针进行遍历

3.在q小于数组长度的情况下执行

4.如果p指向当前元素等于q指针指向的元素，此时p不变，q继续进行遍历

5.否则，q指针指向的元素赋值给p指向的下一个，然后，p指向下一个元素，q继续进行遍历

6.直至循环结束

7.返回p++，即结果

具体代码如下

![_config.yml]({{ site.baseurl }}/images/2020-7-9-02.jpg)
